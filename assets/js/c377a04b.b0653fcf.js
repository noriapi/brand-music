"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[971],{9613:(t,e,a)=>{a.d(e,{Zo:()=>d,kt:()=>h});var n=a(9496);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},i=Object.keys(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var s=n.createContext({}),o=function(t){var e=n.useContext(s),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},d=function(t){var e=o(t.components);return n.createElement(s.Provider,{value:e},t.children)},c="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,i=t.originalType,s=t.parentName,d=p(t,["components","mdxType","originalType","parentName"]),c=o(a),u=r,h=c["".concat(s,".").concat(u)]||c[u]||m[u]||i;return a?n.createElement(h,l(l({ref:e},d),{},{components:a})):n.createElement(h,l({ref:e},d))}));function h(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=a.length,l=new Array(i);l[0]=u;var p={};for(var s in e)hasOwnProperty.call(e,s)&&(p[s]=e[s]);p.originalType=t,p[c]="string"==typeof t?t:r,l[1]=p;for(var o=2;o<i;o++)l[o]=a[o];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},7067:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>o});var n=a(1966),r=(a(9496),a(9613));const i={id:"index",title:"brand-music",sidebar_label:"Readme",sidebar_position:0,custom_edit_url:null},l="brand-music",p={unversionedId:"index",id:"index",title:"brand-music",description:"npm",source:"@site/docs/index.md",sourceDirName:".",slug:"/",permalink:"/brand-music/",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"index",title:"brand-music",sidebar_label:"Readme",sidebar_position:0,custom_edit_url:null},sidebar:"sidebar",next:{title:"Exports",permalink:"/brand-music/modules"}},s={},o=[{value:"Types",id:"types",level:2},{value:"Pitches",id:"pitches",level:3},{value:"Intervals",id:"intervals",level:3}],d={toc:o},c="wrapper";function m(t){let{components:e,...a}=t;return(0,r.kt)(c,(0,n.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"brand-music"},"brand-music"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://img.shields.io/npm/v/brand-music",alt:"npm"})),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"brand-music")," is a TypeScript library which provides ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Microsoft/TypeScript/blob/7b48a182c05ea4dea81bab73ecbbe9e013a79e99/src/compiler/types.ts#L693-L698"},"branded-types")," related to music theory."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://noriapi.github.io/brand-music/"},"Documentation")),(0,r.kt)("h2",{id:"types"},"Types"),(0,r.kt)("h3",{id:"pitches"},"Pitches"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Representation"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://noriapi.github.io/brand-music/namespaces/MNN#midinotenumber"},(0,r.kt)("inlineCode",{parentName:"a"},"MidiNoteNumber"))),(0,r.kt)("td",{parentName:"tr",align:null},"Int (0-127)"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://noriapi.github.io/brand-music/namespaces/PC#pitchclass"},(0,r.kt)("inlineCode",{parentName:"a"},"PitchClass"))),(0,r.kt)("td",{parentName:"tr",align:null},"Int (0-11)"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer representation of ",(0,r.kt)("a",{parentName:"td",href:"https://en.wikipedia.org/wiki/Pitch_class"},"pitch class"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://noriapi.github.io/brand-music/namespaces/PCS#pitchclassset"},(0,r.kt)("inlineCode",{parentName:"a"},"PitchClassSet"))),(0,r.kt)("td",{parentName:"tr",align:null},"Int (0-4095)"),(0,r.kt)("td",{parentName:"tr",align:null},"Bit set of ",(0,r.kt)("inlineCode",{parentName:"td"},"PitchClass"))))),(0,r.kt)("h3",{id:"intervals"},"Intervals"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Representation"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://noriapi.github.io/brand-music/namespaces/PI#pitchinterval"},(0,r.kt)("inlineCode",{parentName:"a"},"PitchInterval"))),(0,r.kt)("td",{parentName:"tr",align:null},"Int"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://en.wikipedia.org/wiki/Pitch_interval#Ordered_Pitch_Interval"},"Ordered pitch interval"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://noriapi.github.io/brand-music/namespaces/S#semitones"},(0,r.kt)("inlineCode",{parentName:"a"},"Semitones"))),(0,r.kt)("td",{parentName:"tr",align:null},"Int (0-)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://en.wikipedia.org/wiki/Pitch_interval#Unordered_Pitch_Interval"},"Unordered pitch interval"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://noriapi.github.io/brand-music/namespaces/PIC#pitchintervalclass"},(0,r.kt)("inlineCode",{parentName:"a"},"PitchIntervalClass"))),(0,r.kt)("td",{parentName:"tr",align:null},"Int (0-11)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://en.wikipedia.org/wiki/Pitch_interval#Ordered_pitch-class_intervals_('pitch_interval_class;_PIC')"},"Ordered pitch-class interval"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://noriapi.github.io/brand-music/namespaces/IC#intervalclass"},(0,r.kt)("inlineCode",{parentName:"a"},"IntervalClass"))),(0,r.kt)("td",{parentName:"tr",align:null},"Int (0-6)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://en.wikipedia.org/wiki/Pitch_interval#Unordered_pitch-class_intervals_('interval_class;_IC')"},"Unordered pitch-class interval"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://noriapi.github.io/brand-music/namespaces/PICS#pitchintervalclassset"},(0,r.kt)("inlineCode",{parentName:"a"},"PitchIntervalClassSet"))),(0,r.kt)("td",{parentName:"tr",align:null},"Int (0-4095)"),(0,r.kt)("td",{parentName:"tr",align:null},"Bit set of ",(0,r.kt)("inlineCode",{parentName:"td"},"PitchIntervalClass"))))))}m.isMDXComponent=!0}}]);